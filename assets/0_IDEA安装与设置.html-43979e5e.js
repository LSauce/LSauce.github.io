import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as c,c as d,b as t,d as n,e as o,w as a,f as e}from"./app-58d2c58f.js";const p="/assets/image-20230110162635998-569f06e5.png",u="/assets/image-20230110162756704-6ca9c1b4.png",g={},h=e('<h1 id="idea下载安装破解" tabindex="-1"><a class="header-anchor" href="#idea下载安装破解" aria-hidden="true">#</a> IDEA下载安装破解</h1><h2 id="idea介绍" tabindex="-1"><a class="header-anchor" href="#idea介绍" aria-hidden="true">#</a> IDEA介绍</h2><p>IDEA 全称 IntelliJ IDEA，是Java编程语言开发的集成环境。IDEA在业界，长期被公认为最好的Java开发工具，尤其在智能代码助手、代码自动提示、重构、JavaEE支持、各类版本工具(git、svn等)、JUnit、CVS整合、代码分析、 创新的GUI设计等方面的功能可以说是具有划时代领先的。IDEA开发公司是JetBrains公司，这是一家总部位于捷克共和国的首都布拉格的公司，除了Java开发工具，该公司还涉及Python、前端等开发领域的产品，可以说是程序员必须要知道的公司之一。</p><p>IDEA本身是一个收费软件，并且版本更迭很快。在公司实际生产中，为了避免因工具版本不同带来一些额外的问题，往往都需要统一工具版本号，在这里建议大家：</p><p><span style="color:red;background:yellow;"><strong>IDEA的版本选择，建议统一为2018.3.6！</strong></span></p><p><span style="color:red;background:yellow;"><strong>IDEA的版本选择，建议统一为2018.3.6！</strong></span></p><p><span style="color:red;background:yellow;"><strong>IDEA的版本选择，建议统一为2018.3.6！</strong></span></p><p>注：</p>',8),_=t("strong",null,"一个软件都非常不建议使用最新版！",-1),m=t("p",null,"比如，如果要选择使用2018年版本的IDEA，就选择大版本号为3，小版本号为6的当年最后一个版本。",-1),y=t("p",null,"如果你觉得18版过老了，可以考虑使用2020.3或者2021.3，不要使用最新的版本就可以！！！",-1),E=t("h2",{id:"idea下载",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#idea下载","aria-hidden":"true"},"#"),n(" IDEA下载")],-1),D=t("p",null,[t("strong",null,"IDEA下载地址：")],-1),A=t("p",null,"官网下载",-1),I={href:"https://www.jetbrains.com/zh-cn/idea/download/other.html",target:"_blank",rel:"noopener noreferrer"},b=t("li",null,[n("根据操作系统选择相应版本，下载版本号为 "),t("strong",null,"2018.3.6"),n(" 的IDEA")],-1),k=t("p",null,"百度云下载",-1),v=t("p",null,"官网下载可能需要科学手段，如果你想更快速的下载，推荐使用百度云盘下载。",-1),f=t("p",null,"百度云链接：",-1),j={href:"https://pan.baidu.com/s/1MgINzHbzh4e_Z_mmFgEMag",target:"_blank",rel:"noopener noreferrer"},x=t("br",null,null,-1),z=t("li",null,[t("p",null,[n("将安装包下载下来后，直接双击安装，整个安装过程全程"),t("strong",null,"下一步"),n("即可！")])],-1),w=t("p",null,"稍微需要注意的是：",-1),P=t("li",null,"不要安装在C盘，建议单独在其它磁盘找一个文件夹放开发相关的软件。（这样开发环境不会因为重装系统而丢失）",-1),J=t("strong",null,"不要带中文，不要有空格",-1),M=t("h2",{id:"idea破解",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#idea破解","aria-hidden":"true"},"#"),n(" IDEA破解")],-1),C=t("p",null,"在上面IDEA百度网盘的下载资源中，“激活”文件夹中放有激活需要使用的工具以及说明。",-1),F=t("img",{src:"https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202212271525418.png?align=center&padding=true",alt:"IDEA的激活图1",style:{zoom:"33%"}},null,-1),S=t("p",null,"建议优先选择下面这种激活方式：",-1),q=t("img",{src:"https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202212271526350.png?align=center&padding=true",alt:"IDEA的激活图2",style:{zoom:"40%"}},null,-1),B=t("p",null,"激活的步骤可以参考下列博客：",-1),O={href:"https://www.exception.site/essay/how-to-free-use-idea-202022-by-resigter-code",target:"_blank",rel:"noopener noreferrer"},N=t("p",null,[n("安装激活插件后，可以手动唤出插件的主界面："),t("span",{style:{color:"red",background:"yellow"}},[t("strong",null,"IDEA主窗口 Help -> Eval Reset")])],-1),U=t("p",null,"推荐按照下图进行设置，勾选自动重置试用时间：",-1),W=t("img",{src:"https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202212271528893.png?align=center&padding=true",alt:"IDEA的激活图3",style:{zoom:"33%"}},null,-1),H=t("h1",{id:"idea使用",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#idea使用","aria-hidden":"true"},"#"),n(" IDEA使用")],-1),T=t("h2",{id:"创建project",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#创建project","aria-hidden":"true"},"#"),n(" 创建Project")],-1),K=t("p",null,[t("strong",null,"Project，即工程。它是IDEA进行项目结构管理的顶层概念 ，IDEA中进行Java开发必须要在一个Project中进行。")],-1),V=t("p",null,"IDEA的 Project 具有以下特点：",-1),L=t("li",null,"在操作系统层面来看，创建一个project实际上就是新建了一个文件夹。",-1),G=t("li",null,"从IDEA软件层面来说，创建一个project就是创建了一个独立的工作空间。",-1),R=t("p",null,[n("当然，想要完全理解 "),t("strong",null,"Project"),n(" 在IDEA中的涵义，还需要自己多多使用，多多体悟。")],-1),Q=t("p",null,[t("span",{style:{color:"red",background:"yellow"}},[t("strong",null,"在IDEA中创建Project遵循以下步骤：")])],-1),Z=t("li",null,[t("p",null,"打开 File--->New--->Project或者Create New Project")],-1),Y=t("p",null,[n("弹窗界面中，首先会要求选择JDK版本，"),t("strong",null,"请选择版本Java8"),n("，还可以选择模板，但JavaSE部分无需选择模板，直接下一步：")],-1),X=t("img",{src:"https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202202241407742.png?align=center",alt:"新建Project",style:{zoom:"33%"}},null,-1),$=t("p",null,[t("strong",null,"注：这里选择的JDK版本是你装在本地的JDK，具体来说需要直接选择整个JDK目录，参考下图：")],-1),tt=t("img",{src:"https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202202241410853.png?align=center",alt:"IDEA选择JDK目录",style:{zoom:"67%"}},null,-1),nt=t("ol",{start:"3"},[t("li",null,"下一步来到给Project起名，这里稍微谈一下Project的命名：")],-1),ot=t("img",{src:"https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202202241411909.png?align=center",alt:"新建Project—命名",style:{zoom:"50%"}},null,-1),st=t("strong",null,'"见名知意"',-1),at=t("p",null,"根据日常工作的普遍规律，给出几条起名的限制：",-1),et=t("ol",null,[t("li",null,[t("strong",null,"工程名尽量使用正确的英语单词，如无特殊需求不要使用中文或者拼音。")]),t("li",null,[t("strong",null,"多个单词之间建议使用下划线或者横杠连接。")])],-1),lt=t("p",null,"举个例子，比如我新建一个工程用于做作业，而我是Java48th的，所以我可以将Project命名为Java48th-homework。",-1),rt=t("li",null,[t("p",null,"新建project其它需要注意的地方："),t("ol",null,[t("li",null,"除了起名字外，Location的含义是工程存放的硬盘位置，建议单独找一个空间存放，不要直接存在默认位置。"),t("li",null,[n("其余设置都默认即可，不需要改动，点击 "),t("strong",null,"Finish"),n(" 即可。")]),t("li",null,"创建完成，可以选择在当前窗口打开Project，还是在新窗口，这个自由选择即可。")])],-1),it=e('<p>这里强烈建议大家专门找一个硬盘区域用来放<code>idea-project</code>。做人要经常收拾房间，做程序员也要把自己的硬盘内容管理的井井有序。<span style="color:red;background:yellow;"><strong>不要直接使用默认路径（C盘或根目录），默认名（untitled）创建Project！</strong></span></p><h2 id="第一个hello-world程序" tabindex="-1"><a class="header-anchor" href="#第一个hello-world程序" aria-hidden="true">#</a> 第一个hello world程序</h2><p>新建Project完毕后，我们就可以打开Project页面，如下图所示：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202202241423677.png?align=center" alt="新建Project界面" style="zoom:33%;"><p>这里我在目录**&quot;E\\idea_space&quot;<strong>下创建了名为</strong>test**的工程。实际上，准备工作到这里，我们就可以开始写Java代码了。</p><p><strong>IDEA中所有Java源代码都必须放在src目录下，才能执行。</strong> 如下图所示：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202202241407887.png?align=center" alt="src目录" style="zoom:50%;"><p>注：简单来说，src是英语单词&quot;source&quot;的缩写，代指&quot;源代码&quot;，这个缩写以后将会经常看到和使用。</p>',8),ct=e(`<p>知道**&quot;src目录&quot;**后，我们按以下步骤进行操作：</p><p>右键单击src目录，选择<strong>New ----&gt; Java Class</strong>新建一个类，然后按照之前一样写main方法，具体代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//文件 HelloWorld.java中</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),dt=e(`<p><strong>最后虽然已经强调过了，但是这里还是要强调几点：</strong></p><ol><li><p>public修饰类的类名必须和文件名保持一致，一个Java文件中只有一个public修饰的类，但非public类可以有多个。</p><p><strong>比如下面Java代码是允许的：</strong></p><p>一个Java文件定义多个类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token comment">//文件 HelloWorld.java中</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>
 <span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">C</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注：public修饰class的含义，什么是public，它的作用是什么等相关问题，我们放在后面再讲。</strong></p></li><li><p>main方法是程序的入口方法，只有存在main方法的Java类可以启动，执行其中的代码。</p><p>注：关于方法的概念，我们会在后面探讨。</p></li><li><p>如果Java Class都<strong>直接</strong>放在src目录下，是不允许有同名的class的，包括public修饰的class和非public修饰的class！<strong>这就好比同一个文件夹下，不允许有同名文件一样。</strong><span style="color:red;background:yellow;"><strong>（这里牵扯到一个包的概念，后面会详细讲解）</strong></span></p></li></ol><h2 id="创建package" tabindex="-1"><a class="header-anchor" href="#创建package" aria-hidden="true">#</a> 创建package</h2><p>在IDEA的工程（module）下，可以：</p><p><span style="color:red;background:yellow;"><strong>右键src目录 --&gt; new --&gt; package</strong></span>来创建包（</p><p>注意：</p>`,6),pt=t("li",null,"如果直接输入一个字符串就是创建一级包名。",-1),ut=t("strong",null,'那么每级包名之间用"."隔开。',-1),gt=t("li",null,"包名要小写",-1),ht=t("li",null,"包名的字符串并不是任意给出的，可以参考Java基础语法中的命名规范",-1),_t=t("p",null,[t("strong",null,"包的作用")],-1),mt=t("p",null,"Java中的包（package）主要有两个作用：",-1),yt=t("li",null,[t("span",{style:{color:"red",background:"yellow"}},[t("strong",null,"用来区分同名Java类，同包中不能有两个同名的Java class。")]),n("（一个文件夹中也不允许有两个同名文件）")],-1),Et=t("strong",null,"访问权限",-1),Dt=e('<p>之前在写&quot;Hello World&quot;案例时，已经强调过一个概念了：</p><p>一个Java文件中，只能有一个public修饰的类，并且该public class的类名必须和Java文件的名字保持一致。</p><p>所以，一个Java文件下，实际上可以定义多个非public修饰的类，那么这些非public类和public类是什么关系呢？</p><p>是同包的关系！</p><p>所以下面的类结构是不允许的！</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202205301819687.png?align=center" alt="同包下不允许同名类" style="zoom:67%;"><p>**Demo.java下有一个public class Demo，还有一个非public class A是不允许的！**因为同包下已经存在一个public class A了！</p><h2 id="创建module" tabindex="-1"><a class="header-anchor" href="#创建module" aria-hidden="true">#</a> 创建Module</h2><p>Project只是IDEA进行项目管理的<strong>顶层概念</strong>，而不是真实存在的基本单元。谁是IDEA进行Java项目开发的基本单元呢？</p><p><strong>Module！</strong></p><p>实际上：</p>',11),At=e(`<p>当然，在IDEA中要想创建Module，必须在一个Project的基础上才能够完成创建。</p><p>从操作系统层面上看，每个Module也是一个独立的文件夹！</p><p>在IDEA中创建Module遵循以下步骤：</p><ol><li><p><strong>右键任何一个Project---&gt;New---&gt;Module（创建Module必须在Project基础上进行）</strong></p></li><li><p>接下来步骤大致和创建Project相同（因为创建Project本质也是新建了一个Module）</p><ol><li><p>选择选择JDK版本（<strong>选择Java8</strong>）</p></li><li><p>无需选择模板，直接下一步</p></li></ol></li><li><p>Module的命名，规则和Project类似，不再赘述。</p></li><li><p>创建Module时，在选择路径时，可以注意一下层级关系：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202202241512636.png?align=center" alt="Module之间的关系" style="zoom:50%;"><pre><code>  1. **如果你希望第二个Module和第一个Module是同级关系，目录路径上要体现同级。**
  2. **如果你希望第二个Module和第一个Module是上下级关系，目录路径上要体现上下级。**
</code></pre></li><li><p>上述设置完成后，其它设置保持默认即可。最后点击<strong>Finish</strong>，即完成创建Module。</p></li></ol><p>至此，IDEA当中的项目管理结构你基本已经知道了，可以开始写代码了！</p><h2 id="project和module的区别" tabindex="-1"><a class="header-anchor" href="#project和module的区别" aria-hidden="true">#</a> Project和Module的区别</h2><p>通过在IDEA种创建两种结构Project和Module，不难发现实际上两者没有本质区别。</p><p>总得来说：<strong>Project是概念上的顶层结构，Module是IDEA的基本单元。</strong></p><ol><li>IDEA中的Project不是一个独立的概念，新建一个Project的实质是创建了一个独立的Module，并且这个module的名字和project名字一样。</li><li>一个Project可以有多个module</li><li>主流的大型项目结构基本都是多Module的，这类项目一般是按功能划分模块，模块之间彼此可以相互依赖。</li></ol>`,9),It=e('<ol><li><span style="color:red;background:yellow;"><strong>在JavaSE阶段，没有必要创建多Module的Project。即便创建了，多个module之间实际也不会相互依赖。</strong></span></li><li>每个Project用独立的窗口打开，而不是堆在一个窗口中。</li></ol><h1 id="idea常用操作-重要" tabindex="-1"><a class="header-anchor" href="#idea常用操作-重要" aria-hidden="true">#</a> IDEA常用操作(重要)</h1><h2 id="导入和打开idea项目" tabindex="-1"><a class="header-anchor" href="#导入和打开idea项目" aria-hidden="true">#</a> 导入和打开IDEA项目</h2><p><strong>对于已有的IDEA工程（例如老师每天传的代码）是可以直接用IDEA打开的，逐个点击其中的Java文件查看代码是很低效的！</strong></p><p>点击IDEA左上角，<span style="color:red;background:yellow;"><strong>File ---&gt; Open ---&gt; 选择目标工程文件</strong></span>，IDEA工程在选择打开时是有特殊图标的，如下图：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202111051659217.png?align=center" alt="可以打开的idea工程" style="zoom:50%;">',6),bt=e('<p>如果代码不能运行，可以找同学研究一下或者直接提问老师。</p><h2 id="打开最近的project" tabindex="-1"><a class="header-anchor" href="#打开最近的project" aria-hidden="true">#</a> 打开最近的Project</h2><p>很多时候，我们需要打开之前已经打开过的Project，做法参考下面：</p><p>点击IDEA左上角，<strong>File ---&gt; Open Recent</strong> ，即可选择打开最近的工程。如下图：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202201221509299.png?align=center" alt="打开最近的Project" style="zoom:50%;"><p>当然这个操作，只能打开你已经打开过的Project，如果想要打开还未打开过的Project，请参考上一条。</p><h2 id="文件的重命名和删除" tabindex="-1"><a class="header-anchor" href="#文件的重命名和删除" aria-hidden="true">#</a> 文件的重命名和删除</h2><p>如果有文件重命名和删除的需求，可以右键某个文件或者文件夹，参考以下图片，进行相关操作，也可以记下相关快捷键。</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202111091607826.png?align=center" alt="IDEA-删除和重命名" style="zoom:33%;"><p>快捷键即重命名：<strong>Shift + F6</strong> 、删除：<strong>Delete</strong></p><h2 id="包名折叠与打开" tabindex="-1"><a class="header-anchor" href="#包名折叠与打开" aria-hidden="true">#</a> 包名折叠与打开</h2><p>在开发中，在src目录创建一个多级包目录来写代码是非常常见的，如下图所示：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202201221553782.png?align=center" alt="多级包目录" style="zoom:50%;"><p>这就是一个具有<strong>多级包目录</strong>的Module，stage1。</p><p>实际开发中，这种<strong>多级包目录</strong>也是非常常见的，像上图中，是完全打开多级包目录，当然你也可以选择折叠其中的空包。</p><p>按照下图点击图中的螺丝图标：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202201221601089.png?align=center" alt="折叠包目录按钮" style="zoom:67%;"><p>在打开的菜单中，点击：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202201221602446.png?align=center" alt="折叠多级包目录" style="zoom:50%;"><p>这样就可以折叠多级空包目录，效果如下：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202201221603935.png?align=center" alt="折叠多级空包目录效果图" style="zoom:50%;"><p><strong>这个选项菜单中的其它按钮，你也可以试一试效果，总之多摸索摸索，熟悉了就好了。</strong></p><h2 id="代码分屏" tabindex="-1"><a class="header-anchor" href="#代码分屏" aria-hidden="true">#</a> 代码分屏</h2><p>有时我们需要同时查看多个java文件的代码，普遍来说，实际开发中程序员都会有扩展外屏来实现这种需求。</p><p>但如果没有的话，就可以使用IDEA自带的分屏功能。</p><p>具体使用下来，可以任意找到一个打开的Java文件选项卡，右键单击，在弹出菜单中单击下列按钮即可实现分屏。</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202201221614443.png?align=center" alt="代码分屏按钮" style="zoom:50%;"><p><strong>IDEA支持代码文件，左右分屏和上下分屏。开发中，这也是一个不错的功能。</strong></p><h1 id="idea一些设置-了解" tabindex="-1"><a class="header-anchor" href="#idea一些设置-了解" aria-hidden="true">#</a> IDEA一些设置(了解)</h1><p>IDEA本身是一个非常棒的集成开发环境，但不同的人使用习惯有所不同，为了提高IDEA的使用效率，有必要对默认设置做出一些修改。</p><p>以下讲的设置，都是我个人经验、使用习惯推荐的设置，当然：</p><ol><li>你也可以积累自己的IDEA使用经验，积累自己的习惯，这很重要，工具都是越使用越顺手，越改适合自己。</li><li>碰到有些位置觉得使用不便，想要修改时，可以尝试百度一下，IDEA当中的很多内容都是自定义的。</li></ol><p>以下设置的位置以及截图全部针对 <strong>IDEA 2018.3</strong>，使用其它版本的同学，如果找不到可以百度一下或者多找一找。</p><h2 id="去掉代码提示的大小写限制" tabindex="-1"><a class="header-anchor" href="#去掉代码提示的大小写限制" aria-hidden="true">#</a> 去掉代码提示的大小写限制</h2><p>默认情况下，IDEA的<strong>代码联想补全功能</strong>会严格区分大小写。</p><p>例如：输入Sys，IDEA会联想出类System，相反输入sys则不行。</p><p>这显然是不方便的，代码联想补全实际上并不需要区分大小写。可以按照以下顺序操作取消：</p><p>点击IDEA 左上角的： <strong>File</strong>----&gt;<strong>Settings</strong>-----&gt;<strong>Editor</strong> -----&gt;<strong>General</strong>-----&gt; <strong>Code Completion</strong>------&gt;<strong>Match Case</strong>去掉勾。</p><p>如下图：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202202241555389.png?align=center" alt="去掉代码提示的大小写限制" style="zoom:35%;">',40),kt=e('<h2 id="单行注释设置" tabindex="-1"><a class="header-anchor" href="#单行注释设置" aria-hidden="true">#</a> 单行注释设置</h2><p>默认情况下，单行注释从每行代码的开头开始，而不是和代码缩进对齐，而且代码规范中还要求单行注释后面需要加一个空格。IDEA中都提供了类似设置完成这些功能，参考以下图片：</p><p>点击IDEA 左上角的： <strong>File</strong>----&gt;<strong>Settings</strong> ---&gt; 按照下图 <strong>标号4</strong> 一样进行设置勾选：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/IDEA设置-单行注释.png?align=center" alt="IDEA设置-单行注释" style="zoom:33%;"><h2 id="修改idea内存大小" tabindex="-1"><a class="header-anchor" href="#修改idea内存大小" aria-hidden="true">#</a> 修改IDEA内存大小</h2><p>IDEA默认分配的内存空间占用是比较小的，如果电脑的性能不错，可以考虑多给IDEA分配一些内存使用。实测后可以提升一些流畅度，也不会影响操作系统整体性能，如果电脑的内存大于 <strong>8G</strong> 建议修改一下。当然，不改也没多大影响，软件运行是否流畅，最终还要看电脑的CPU、硬盘速率等各种性能综合。</p><p>点击IDEA中上方的 <strong>Help</strong> -----&gt; <strong>Edit Custom VM Options</strong> 打开IDEA的配置文件，如下图所示：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202111091705736.png?align=center" alt="IDEA-全局参数配置" style="zoom:33%;"><p><strong>配置1</strong>：设置IDEA启动时的初始可分配的最大内存大小，如果启动速度很慢可以适当增加该配置。</p><p><strong>配置2</strong>：设置IDEA最大可分配内存空间大小，如果需要打开多个IDEA窗口可以适当增加该配置。</p><p><strong>配置3</strong>：设置IDEA编译代码时最大代码缓存的大小，不能超过2GB大小。</p><p>总之，这三个配置在一定范围内越大越好，可以参考图片中的设置，也可以适当增加，但也不要过分加大，没什么意义。</p><p><strong>附打开IDEA内存统计：</strong></p><blockquote><p>打开IDEA左上角 <strong>File ---&gt; Setting ---&gt; 按照下图设置勾选：</strong></p></blockquote><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202111091758847.png?align=center" alt="IDEA-显示当前内存占用" style="zoom:33%;"><p>这样就可以在 <strong>IDEA主窗口</strong> 的右下角显示当前IDEA占用内存空间，这样也更方便随时根据需求增加IDEA最大内存空间。</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202111100929950.png?align=center" alt="IDEA-当前占有内存大小" style="zoom:33%;"><p><strong>以上，关于IDEA占用内存相关的设置就完成了。</strong></p><h2 id="设置编码格式为utf-8" tabindex="-1"><a class="header-anchor" href="#设置编码格式为utf-8" aria-hidden="true">#</a> 设置编码格式为UTF-8</h2><p>中文乱码问题对于IDEA是一个不多见也不少见的问题，究其原因大多是字符编码格式不匹配导致。</p><p>这里建议将软件的编码格式都设置为UTF-8能避免绝大多数乱码问题。尤其是很多同学之前使用过eclipse，默认编码都是GBK（本地中文编码），转移代码的时候经常会中文乱码问题。</p>',21),vt=t("p",null,[n("打开IDEA左上角 File ---> Setting ---> "),t("strong",null,"参考如下图全部设置为UTF-8：")],-1),ft=t("img",{src:"https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202111100957136.png?align=center",alt:"IDEA-设置编码格式-1",style:{zoom:"33%"}},null,-1),jt=t("span",{style:{color:"red",background:"yellow"}},[t("strong",null,"BOM for new UTF-8 files")],-1),xt=t("strong",null,"BOM",-1),zt=t("strong",null,"标记或者签名",-1),wt=t("strong",null,"签名",-1),Pt=t("p",null,[t("span",{style:{color:"red",background:"yellow"}},[t("strong",null,"BOM 这个签名虽然不直接显示在文本中，但它确实是存在的，能够被Windows平台识别而其它平台则不行。")])],-1),Jt=t("p",null,"这就意味着：带BOM的Java文件在Windows平台下是可以编译成功的，但是在 Linux等平台下带BOM文件就会编译失败。这严重破坏了Java语言的跨平台性，所以请不要创建带BOM的Java文件：不要设置 Create UTF-8 Files with BOM！！请按照图片中进行设置！",-1),Mt=t("li",null,[t("p",null,[n("参考上面将编码设置为“UTF-8”的方式，将设置同步到 "),t("strong",null,"File ---> Other Setting ---> Setting for New Projects"),n(" ，这样新建Project也会是UTF-8编码格式。")])],-1),Ct=t("li",null,[t("p",null,"设置完以上两点后，基本上乱码问题就能够解决大部分了。如果仍然出现乱码问题，IDEA还有一些其它涉及到编码的设置，可以结合实际场景，自行百度一下进行设置与修改。")],-1),Ft=e('<h2 id="字体大小设置" tabindex="-1"><a class="header-anchor" href="#字体大小设置" aria-hidden="true">#</a> 字体大小设置</h2><p>Settings---&gt;Editor---&gt; Font</p><p>根据自己需要, 选择字体与字号大小</p><figure><img src="'+p+'" alt="image-20230110162635998" tabindex="0" loading="lazy"><figcaption>image-20230110162635998</figcaption></figure><h2 id="主题背景设置" tabindex="-1"><a class="header-anchor" href="#主题背景设置" aria-hidden="true">#</a> 主题背景设置</h2><p>Settings---&gt;Appearance &amp; Behavior----&gt; Appearance</p><p>根据需要, Theme中选择主题背景</p><figure><img src="'+u+'" alt="image-20230110162756704" tabindex="0" loading="lazy"><figcaption>image-20230110162756704</figcaption></figure><h1 id="idea快捷键-重要" tabindex="-1"><a class="header-anchor" href="#idea快捷键-重要" aria-hidden="true">#</a> IDEA快捷键(重要)</h1><blockquote><p>软件用的熟不熟，快不快，很多时候都要看快捷键的使用，IDEA也不例外。我们作为Java开发者而言，IDEA的常用快捷键是需要知道且熟练使用的。在使用快捷键时，比较常见的问题就是：计算机的全局快捷键和IDEA快捷键冲突，这个时候IDEA快捷键会不起作用。以我的经验来看，以下软件的全局快捷键经常和IDEA冲突：</p><ol><li>QQ音乐，建议在设置中直接关闭全局快捷键（听个歌要啥快捷键）</li><li>网易云音乐（同上）</li><li>QQ</li><li>百度网盘</li><li>...</li></ol><p>如果碰到在IDEA使用某个快捷键不生效，就需要立刻考虑是否是某个软件的全局快捷键冲突了，并且 <span style="color:red;background:yellow;"><strong>这个时候肯定要以&quot;吃饭的家伙&quot;IDEA为大。</strong></span><strong>（坦白来说，全局快捷键这个东西很坑，任何软件如无绝对必要都建议屏蔽它的全局快捷键！）</strong></p></blockquote><p>了解快捷键的基础情况后，来看一下IDEA中最常用的一些快捷键：</p><table><thead><tr><th>快捷键</th><th>效果介绍</th></tr></thead><tbody><tr><td><strong>Alt + Enter</strong></td><td>快速修复光标位置的错误，光标放在的位置不同提示的结果也不同 <code>（必备）</code></td></tr><tr><td><strong>Ctrl + Alt + L</strong></td><td>格式化代码，强迫症必备，建议每写几行代码下意识的按一下该快捷键<code>（必备）</code></td></tr><tr><td><strong>Ctrl + Y</strong></td><td>删除光标所在行 或 删除选中的行 <code>（必备）</code></td></tr><tr><td><strong>Ctrl + D</strong></td><td>复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面<code>（必备）</code></td></tr><tr><td>Ctrl + W</td><td>递进式选择代码块，会逐步选择某行代码、结构体，方法直至整个类</td></tr><tr><td>Ctrl + O</td><td>选择可重写的方法</td></tr><tr><td><strong>Ctrl + /</strong></td><td>注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号 <code>（必备）</code></td></tr><tr><td><strong>Ctrl + Shift + /</strong></td><td>多行注释<code>（必备）</code></td></tr><tr><td><strong>Alt + Insert</strong></td><td>代码自动生成，比如构造方法，get/set方法等等<code>（必备）</code></td></tr><tr><td>Ctrl + Alt + 左方向键</td><td>回到上一个光标所在位置 <code>（Debug模式必备）</code></td></tr><tr><td>Ctrl + Alt + 右方向键</td><td>前进到上一个光标的位置 <code>（Debug模式必备）</code></td></tr><tr><td>Ctrl + Shift + Z</td><td>取消撤销 <code>（必备）</code></td></tr><tr><td>Ctrl + Alt + V</td><td>快速补全变量</td></tr><tr><td>F2</td><td>跳转到下一个高亮错误 或 警告位置</td></tr><tr><td>...</td><td>...</td></tr></tbody></table><p>以上都是<strong>默认情况下，Windows操作系统下</strong>，IDEA的常用快捷键。如果是mac用户，或者有其它快捷键需求，请自行查找。在以后的学习工作中，这些快捷键都有被使用的机会，尤其加黑的几个是特别常用的。</p><p>最后，提供一个我个人经常修改的快捷键：main方法在Java中作为入口方法，是经常被启动的，但默认的main方法启动快捷键比较复杂的，建议将它修改成更方便的快捷键。按照以下操作执行：</p><p>打开IDEA左上角 <strong>File ---&gt; Setting ---&gt; Keymap ---&gt; 搜索框中搜索 Run context configuration</strong> ---&gt; 参考图片设置：</p><img src="https://hixiaodong123.oss-cn-hangzhou.aliyuncs.com/typora/202110152154162.png?align=center" alt="IDEA-main方法启动快捷键设置" style="zoom:33%;">',16);function St(qt,Bt){const s=r("font"),l=r("ExternalLinkIcon");return c(),d("div",null,[h,t("p",null,[n("并不是说其它版本不能用，统一工具版本是出于统一环境、避免环境差异引发问题而考虑的。工作后可以根据公司的实际要求做出调整，但是不管怎么样，"),o(s,{color:"red"},{default:a(()=>[_]),_:1}),n(" 拿IDEA来说，每年有三个大版本，即1，2和3，建议选择每年的最后一个大版本的最后一个小版本作为开发使用。")]),m,y,E,D,t("ol",null,[t("li",null,[A,t("ul",null,[t("li",null,[n("下载地址："),t("a",I,[n("IDEA官网下载-其它版本"),o(l)])]),b])]),t("li",null,[k,v,t("blockquote",null,[f,t("p",null,[n("链接："),t("a",j,[n("https://pan.baidu.com/s/1MgINzHbzh4e_Z_mmFgEMag"),o(l)]),x,n(" 提取码：yo7m")])])]),z]),w,t("ol",null,[P,t("li",null,[n("安装目录"),o(s,{color:"red"},{default:a(()=>[J]),_:1}),n("，这有时候会造成一些奇怪的问题。")])]),M,C,F,S,q,B,t("p",null,[t("a",O,[n("https://www.exception.site/essay/how-to-free-use-idea-202022-by-resigter-code"),o(l)])]),N,U,W,o(s,{color:"red"},{default:a(()=>[n("**进行如上设置后，在每次IDEA重启时，插件会自动重置试用期限。**")]),_:1}),n("当然你也可以手动Reset，按钮在右下角。"),H,T,t("blockquote",null,[K,V,t("ol",null,[t("li",null,[o(s,{color:"red"},{default:a(()=>[n("**Project只是项目管理的顶层概念，不是物理存在于操作系统上的结构。**")]),_:1}),n("（这一点随后你就会明白）")]),L,G]),R]),Q,t("ol",null,[Z,t("li",null,[Y,X,$,tt,nt,ot,t("p",null,[n("关于Project的命名问题：工程的命名格式没有固定的限制，一般具有"),o(s,{color:"red"},{default:a(()=>[st]),_:1}),n("的作用即可，也就是说工程的名字需要指出该Project的意义。")]),at,et,lt]),rt]),it,o(s,{color:"red"},{default:a(()=>[n("**就JavaSE阶段的学习进度而言，所有的代码都需要写在src目录下，也只有放在src目录下的代码，才可以被执行。**")]),_:1}),ct,o(s,{color:"red"},{default:a(()=>[n("**在IDEA这种集成开发环境中，已经集成了cmd窗口控制台的作用，点击main方法左边的Run，启动main方法即可看到代码执行结果！**")]),_:1}),dt,t("ol",null,[pt,t("li",null,[n("如果想要创建多级包，"),o(s,{color:"red"},{default:a(()=>[ut]),_:1})]),gt,ht]),_t,mt,t("ol",null,[yt,t("li",null,[n("包还可以用来划分"),o(s,{color:"red"},{default:a(()=>[Et]),_:1}),n("。（面向对象详细讲，这里先略过）")])]),Dt,o(s,{color:"red"},{default:a(()=>[n("**每创建一个Project，默认就会创建一个Module，并且该Module的名字和Project相同！**")]),_:1}),At,o(s,{color:"red"},{default:a(()=>[n("**两个注意事项：**")]),_:1}),It,o(s,{color:"red"},{default:a(()=>[n("**普通文件夹是没有这个黑色的小格子的，这是IDEA工程的标记！打开后，就可以正常查看Project中的代码，并且能够运行。**")]),_:1}),bt,o(s,{color:"red"},{default:a(()=>[n("**这个设置，强烈建议大家都改一下！**")]),_:1}),kt,t("ol",null,[t("li",null,[vt,ft,o(s,{color:"red"},{default:a(()=>[n("**备注**")]),_:1}),n("，这里额外说一下，上图中最后一行的选项 "),jt,n(" ："),t("p",null,[n("首先你要知道"),o(s,{color:"red"},{default:a(()=>[xt]),_:1}),n("这个概念，简单来说它是一种"),zt,n("，当编辑器读取到这个"),wt,n("时，就知道该文件是采用 UTF-8格式 编码的，当然这是Windows操作系统的做法，但其它操作系统平台（比如Mac、Linux等）是不支持的。")]),Pt,Jt]),Mt,Ct]),Ft])}const Ut=i(g,[["render",St],["__file","0_IDEA安装与设置.html.vue"]]);export{Ut as default};
