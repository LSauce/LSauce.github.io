const e=JSON.parse('{"key":"v-3c4a999d","path":"/Java/SE/8_%E8%A1%A5%E5%85%85%E5%85%B6%E4%BB%96%E5%B8%B8%E7%94%A8%E7%B1%BB.html","title":"08.补充其他常用类","lang":"zh-CN","frontmatter":{"title":"08.补充其他常用类","index":true,"icon":"laptop-code","category":["JavaSE"],"description":"查看下列代码，请回答下列代码的执行结果是什么？ 包装类相关引例 2. 这个value都是final修饰的，这就意味着是修改不了的。 3. 所有包装类型都是final修饰的，不能通过继承破坏value的设计体系。 总之，包装类型中有value成员变量的对象，都是不可变的。 基本数据类型与包装类型的相互转换 ​\\t\\t包装类型对象在使用上，在绝大多数情况下，是...","head":[["meta",{"property":"og:url","content":"https://jf.kiroe.cn/Java/SE/8_%E8%A1%A5%E5%85%85%E5%85%B6%E4%BB%96%E5%B8%B8%E7%94%A8%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"JavaFarms"}],["meta",{"property":"og:title","content":"08.补充其他常用类"}],["meta",{"property":"og:description","content":"查看下列代码，请回答下列代码的执行结果是什么？ 包装类相关引例 2. 这个value都是final修饰的，这就意味着是修改不了的。 3. 所有包装类型都是final修饰的，不能通过继承破坏value的设计体系。 总之，包装类型中有value成员变量的对象，都是不可变的。 基本数据类型与包装类型的相互转换 ​\\t\\t包装类型对象在使用上，在绝大多数情况下，是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"JavaFarmer"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"08.补充其他常用类\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JavaFarmer\\",\\"url\\":\\"https://jf.kiroe.cn\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"包装类型特点","slug":"包装类型特点","link":"#包装类型特点","children":[]},{"level":2,"title":"基本数据类型与包装类型的相互转换","slug":"基本数据类型与包装类型的相互转换","link":"#基本数据类型与包装类型的相互转换","children":[]},{"level":2,"title":"包装类型和String类型的相互转换","slug":"包装类型和string类型的相互转换","link":"#包装类型和string类型的相互转换","children":[]},{"level":2,"title":"包装类的常用方法","slug":"包装类的常用方法","link":"#包装类的常用方法","children":[]},{"level":2,"title":"Integer的缓存机制","slug":"integer的缓存机制","link":"#integer的缓存机制","children":[]},{"level":2,"title":"Integer的一些面试问题","slug":"integer的一些面试问题","link":"#integer的一些面试问题","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[{"level":3,"title":"整型包装类型对象相等的比较","slug":"整型包装类型对象相等的比较","link":"#整型包装类型对象相等的比较","children":[]},{"level":3,"title":"浮点型包装类型对象相等的比较","slug":"浮点型包装类型对象相等的比较","link":"#浮点型包装类型对象相等的比较","children":[]},{"level":3,"title":"布尔型对象相等的比较","slug":"布尔型对象相等的比较","link":"#布尔型对象相等的比较","children":[]}]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"引入","slug":"引入","link":"#引入","children":[]},{"level":2,"title":"枚举的两种实现方式","slug":"枚举的两种实现方式","link":"#枚举的两种实现方式","children":[{"level":3,"title":"自定义类实现枚举","slug":"自定义类实现枚举","link":"#自定义类实现枚举","children":[]},{"level":3,"title":"使用enum关键字实现枚举","slug":"使用enum关键字实现枚举","link":"#使用enum关键字实现枚举","children":[]}]},{"level":2,"title":"时间戳","slug":"时间戳","link":"#时间戳","children":[]},{"level":2,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":2,"title":"成员方法","slug":"成员方法","link":"#成员方法","children":[]},{"level":2,"title":"构造方法","slug":"构造方法-1","link":"#构造方法-1","children":[]},{"level":2,"title":"成员方法","slug":"成员方法-1","link":"#成员方法-1","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":20.37,"words":6112},"filePathRelative":"Java/SE/8_补充其他常用类.md","autoDesc":true}');export{e as data};
