const e=JSON.parse('{"key":"v-eaea958a","path":"/Java/SE/14_%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B.html","title":"14.网络编程","lang":"zh-CN","frontmatter":{"title":"14.网络编程","index":true,"icon":"laptop-code","category":["JavaSE"],"description":"学习目标:\\r掌握UDP编程; \\r掌握TCP编程; 所谓的网络编程，就是实现互联网络中的不同计算机上运行程序间的数据交换。Java网络编程，自然就是实现两个Java进程之间的数据交换。（启动一个main方法就是启动一个Java进程） 对于Java程序员而言，日常工作几乎不会直接涉及到底层网络协议和实现细节，网络编程的原理无论是出于面试还是实际开发的需求，...","head":[["meta",{"property":"og:url","content":"https://jf.kiroe.cn/Java/SE/14_%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"JavaFarms"}],["meta",{"property":"og:title","content":"14.网络编程"}],["meta",{"property":"og:description","content":"学习目标:\\r掌握UDP编程; \\r掌握TCP编程; 所谓的网络编程，就是实现互联网络中的不同计算机上运行程序间的数据交换。Java网络编程，自然就是实现两个Java进程之间的数据交换。（启动一个main方法就是启动一个Java进程） 对于Java程序员而言，日常工作几乎不会直接涉及到底层网络协议和实现细节，网络编程的原理无论是出于面试还是实际开发的需求，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"JavaFarmer"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"14.网络编程\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JavaFarmer\\",\\"url\\":\\"https://jf.kiroe.cn\\"}]}"]]},"headers":[{"level":2,"title":"传输原理","slug":"传输原理","link":"#传输原理","children":[]},{"level":2,"title":"发送端步骤","slug":"发送端步骤","link":"#发送端步骤","children":[]},{"level":2,"title":"接收端步骤","slug":"接收端步骤","link":"#接收端步骤","children":[]},{"level":2,"title":"DatagramSocket","slug":"datagramsocket","link":"#datagramsocket","children":[]},{"level":2,"title":"DatagramPacket","slug":"datagrampacket","link":"#datagrampacket","children":[]},{"level":2,"title":"案例","slug":"案例","link":"#案例","children":[{"level":3,"title":"v1 发送端发送消息,接收端接收并打印","slug":"v1-发送端发送消息-接收端接收并打印","link":"#v1-发送端发送消息-接收端接收并打印","children":[]},{"level":3,"title":"v2 使用工具类优化v1","slug":"v2-使用工具类优化v1","link":"#v2-使用工具类优化v1","children":[]},{"level":3,"title":"v3 发送端接收端相互发送","slug":"v3-发送端接收端相互发送","link":"#v3-发送端接收端相互发送","children":[]},{"level":3,"title":"v4 使用多线程优化v3","slug":"v4-使用多线程优化v3","link":"#v4-使用多线程优化v3","children":[]}]},{"level":2,"title":"传输原理","slug":"传输原理-1","link":"#传输原理-1","children":[]},{"level":2,"title":"客户端步骤(Client)","slug":"客户端步骤-client","link":"#客户端步骤-client","children":[]},{"level":2,"title":"服务端步骤(Server)","slug":"服务端步骤-server","link":"#服务端步骤-server","children":[]},{"level":2,"title":"Socket","slug":"socket","link":"#socket","children":[]},{"level":2,"title":"ServerSocket","slug":"serversocket","link":"#serversocket","children":[]},{"level":2,"title":"案例","slug":"案例-1","link":"#案例-1","children":[{"level":3,"title":"v1 客户端发送消息,服务端接收并打印","slug":"v1-客户端发送消息-服务端接收并打印","link":"#v1-客户端发送消息-服务端接收并打印","children":[]},{"level":3,"title":"v2 多个客户端发送,服务端接收(多线程处理)","slug":"v2-多个客户端发送-服务端接收-多线程处理","link":"#v2-多个客户端发送-服务端接收-多线程处理","children":[]},{"level":3,"title":"v3 客户端发送对象(序列化),服务端接收","slug":"v3-客户端发送对象-序列化-服务端接收","link":"#v3-客户端发送对象-序列化-服务端接收","children":[]},{"level":3,"title":"v4 客户端上传文件到服务端","slug":"v4-客户端上传文件到服务端","link":"#v4-客户端上传文件到服务端","children":[]}]},{"level":2,"title":"三次握手","slug":"三次握手","link":"#三次握手","children":[]},{"level":2,"title":"四次挥手","slug":"四次挥手","link":"#四次挥手","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":17.25,"words":5175},"filePathRelative":"Java/SE/14_网络编程.md","autoDesc":true}');export{e as data};
